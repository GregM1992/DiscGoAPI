// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiscGoAPI.Migrations
{
    [DbContext(typeof(DiscGoAPIDbContext))]
    [Migration("20240725180543_baggedDiscUpdate6")]
    partial class baggedDiscUpdate6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiscGoAPI.Models.Bag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BagName")
                        .HasColumnType("text");

                    b.Property<bool>("Favorite")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Bags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BagName = "FavoriteBag",
                            Favorite = true,
                            UserId = "OTSAVyBcQ5R8N7OeGx6sHDr4RV53"
                        },
                        new
                        {
                            Id = 2,
                            BagName = "notFavorite",
                            Favorite = false,
                            UserId = "OTSAVyBcQ5R8N7OeGx6sHDr4RV53"
                        });
                });

            modelBuilder.Entity("DiscGoAPI.Models.BaggedDisc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Aces")
                        .HasColumnType("integer");

                    b.Property<string>("Background_color")
                        .HasColumnType("text");

                    b.Property<int>("BagId")
                        .HasColumnType("integer");

                    b.Property<int>("Birdies")
                        .HasColumnType("integer");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("DiscId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fade")
                        .HasColumnType("text");

                    b.Property<bool?>("Favorite")
                        .HasColumnType("boolean");

                    b.Property<string>("Glide")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Pic")
                        .HasColumnType("text");

                    b.Property<string>("Speed")
                        .HasColumnType("text");

                    b.Property<string>("Stability")
                        .HasColumnType("text");

                    b.Property<string>("Turn")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BaggedDiscs");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Aces = 2,
                            Background_color = "#34532",
                            BagId = 1,
                            Birdies = 3,
                            Brand = "axiom",
                            Category = "putter",
                            Color = "#343403",
                            DiscId = "hdye73-hfuye=3jdfuj",
                            Fade = "3",
                            Favorite = true,
                            Glide = "3",
                            Name = "roc",
                            Pic = "fakeUrl",
                            Speed = "3",
                            Stability = "over-stable",
                            Turn = "3"
                        });
                });

            modelBuilder.Entity("DiscGoAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "myEmail.com",
                            UserId = "OTSAVyBcQ5R8N7OeGx6sHDr4RV53",
                            UserName = "discGuy32"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
